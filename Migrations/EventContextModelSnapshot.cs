// <auto-generated />
using EventCatalogAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventCatalogAPI.Migrations
{
    [DbContext(typeof(EventContext))]
    partial class EventContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.Catalog_CatalogEvent_Hilo", "'Catalog_CatalogEvent_Hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.Catalog_EventTopic_Hilo", "'Catalog_EventTopic_Hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.Catalog_EventType_Hilo", "'Catalog_EventType_Hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.Catalog_EventVenue_Hilo", "'Catalog_EventVenue_Hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.Catalog_Organizer_Hilo", "'Catalog_Organizer_Hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventCatalogAPI.Domain.CatalogEvent", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "Catalog_CatalogEvent_Hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CurrentStatus")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<string>("EventAddress")
                        .HasMaxLength(400);

                    b.Property<string>("EventEndDate")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EventEndTime")
                        .HasMaxLength(100);

                    b.Property<string>("EventImageUrl")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("EventOrganizerID");

                    b.Property<string>("EventStartDate")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EventStartTime")
                        .HasMaxLength(100);

                    b.Property<int>("EventTopicID");

                    b.Property<int>("EventTypeID");

                    b.Property<string>("EventUrl")
                        .HasMaxLength(400);

                    b.Property<int>("EventVenueID");

                    b.HasKey("EventID");

                    b.HasIndex("EventOrganizerID");

                    b.HasIndex("EventTopicID");

                    b.HasIndex("EventTypeID");

                    b.HasIndex("EventVenueID");

                    b.ToTable("CatalogEvent");
                });

            modelBuilder.Entity("EventCatalogAPI.Domain.CatalogEventTopic", b =>
                {
                    b.Property<int>("EventTopicID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "Catalog_EventTopic_Hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("EventTopicName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LocalizedName")
                        .HasMaxLength(100);

                    b.Property<string>("ShortName")
                        .HasMaxLength(100);

                    b.HasKey("EventTopicID");

                    b.ToTable("CatalogEventTopic");
                });

            modelBuilder.Entity("EventCatalogAPI.Domain.CatalogEventType", b =>
                {
                    b.Property<int>("EventTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "Catalog_EventType_Hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("EventTypeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("EventTypeID");

                    b.ToTable("CatalogEventType");
                });

            modelBuilder.Entity("EventCatalogAPI.Domain.EventOrganizer", b =>
                {
                    b.Property<int>("OrganizerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "Catalog_Organizer_Hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Description")
                        .HasMaxLength(400);

                    b.Property<string>("OrganizerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("OrganizerUrl")
                        .HasMaxLength(400);

                    b.HasKey("OrganizerID");

                    b.ToTable("EventOrganizer");
                });

            modelBuilder.Entity("EventCatalogAPI.Domain.EventVenue", b =>
                {
                    b.Property<int>("VenueID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "Catalog_EventVenue_Hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Address")
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("latitude")
                        .HasMaxLength(100);

                    b.Property<string>("longitude")
                        .HasMaxLength(100);

                    b.HasKey("VenueID");

                    b.ToTable("EventVenue");
                });

            modelBuilder.Entity("EventCatalogAPI.Domain.CatalogEvent", b =>
                {
                    b.HasOne("EventCatalogAPI.Domain.EventOrganizer", "EventOrganizer")
                        .WithMany()
                        .HasForeignKey("EventOrganizerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EventCatalogAPI.Domain.CatalogEventTopic", "EventTopic")
                        .WithMany()
                        .HasForeignKey("EventTopicID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EventCatalogAPI.Domain.CatalogEventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EventCatalogAPI.Domain.EventVenue", "EventVenue")
                        .WithMany()
                        .HasForeignKey("EventVenueID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
